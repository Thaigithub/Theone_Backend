stages:
    - build
    - deploy

build:
    stage: build
    image: node:18
    script:
        - echo "Building..."
        - npm i
        - npm i cross-env dotenv-cli
        - timeout 2m npm run build || { echo "Build process was terminated due to timeout"; exit 1; }
    only:
        - develop
        - main

deploy-dev:
    stage: deploy
    image: alpine:3.11
    before_script:
        - 'command -v ssh-agent >/dev/null || ( yum update -y && yum install openssh-client -y )'
        - eval $(ssh-agent -s)
        - echo "$AWS_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir ~/.ssh && touch ~/.ssh/config
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        - ssh-keyscan -H $AWS_EC2_IP >> ~/.ssh/known_hosts
    script:
        - echo "Deploying started..."
        - ssh $AWS_EC2_USER@$AWS_EC2_IP "eval \"\$(ssh-agent -s)\" && sh $AWS_SCRIPT_PATH"
        - echo "Finished deploying the app."
    only:
        - develop

deploy-prod:
    stage: deploy
    image: alpine:3.11
    before_script:
        - 'command -v ssh-agent >/dev/null || ( yum update -y && yum install openssh-client -y )'
        - eval $(ssh-agent -s)
        - echo "$PROD_AWS_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir ~/.ssh && touch ~/.ssh/config
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        - ssh-keyscan -H $PROD_AWS_EC2_IP >> ~/.ssh/known_hosts
    script:
        - echo "Deploying started..."
        - ssh $PROD_AWS_EC2_USER@$PROD_AWS_EC2_IP "eval \"\$(ssh-agent -s)\" && sh $PROD_AWS_SCRIPT_PATH"
        - echo "Finished deploying the app."
    only:
        - main
