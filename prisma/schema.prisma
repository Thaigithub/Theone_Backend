generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                      Int                      @id @default(autoincrement())
  username                String                   @unique
  password                String
  type                    AccountType
  status                  AccountStatus
  isActive                Boolean                  @default(true)
  createdAt               DateTime                 @default(now()) @map("created_at")
  updatedAt               DateTime                 @updatedAt @map("updated_at")
  admin                   Admin?
  authenticationProviders AuthenticationProvider[]
  company                 Company?
  member                  Member?
  otp                     OtpProvider?

  @@map("accounts")
}

model Admin {
  id        Int        @id @default(autoincrement())
  name      String
  level     AdminLevel
  accountId Int        @unique @map("account_id")
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  account   Account    @relation(fields: [accountId], references: [id])

  @@map("admins")
}

model Member {
  id        Int              @id @default(autoincrement())
  name      String
  accountId Int              @unique @map("account_id")
  isActive  Boolean          @default(true)
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
  contact   String
  level     MemberLevel
  account   Account          @relation(fields: [accountId], references: [id])
  teams     MembersOnTeams[]
  leader    Team[]

  @@map("members")
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  accountId Int      @unique @map("account_id")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  account   Account  @relation(fields: [accountId], references: [id])

  @@map("companies")
}

model Team {
  id        Int              @id @default(autoincrement())
  code      String
  name      String
  status    TeamStatus
  leaderId  Int              @map("leader_id")
  isActive  Boolean          @default(true)
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
  members   MembersOnTeams[]
  leader    Member           @relation(fields: [leaderId], references: [id])

  @@map("teams")
}

model MembersOnTeams {
  teamId    Int      @map("team_id")
  memberId  Int      @map("member_id")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  member    Member   @relation(fields: [memberId], references: [id])
  team      Team     @relation(fields: [teamId], references: [id])

  @@id([memberId, teamId])
  @@map("members_on_teams")
}

model AuthenticationProvider {
  id        Int                        @id @default(autoincrement())
  key       String
  type      AuthenticationProviderType
  isActive  Boolean                    @default(true)
  createdAt DateTime                   @default(now()) @map("created_at")
  updatedAt DateTime                   @updatedAt @map("updated_at")
  accountId Int                        @map("account_id")
  account   Account                    @relation(fields: [accountId], references: [id])

  @@map("authentication_providers")
}

model OtpProvider {
  id          Int       @id @default(autoincrement())
  accountId   Int       @unique @map("account_id")
  updatedAt   DateTime? @updatedAt @map("updated_at")
  phoneNumber String?   @unique @map("phone_number")
  otpCode     String?   @map("otp_code")
  account     Account   @relation(fields: [accountId], references: [id])

  @@map("otp_providers")
}

model files {
  id             Int      @id @default(autoincrement())
  type           FileType
  key            String?
  file_name      String?
  size           BigInt
  is_deactivated Boolean  @default(false)
  created_at     DateTime @default(now())
  updated_at     DateTime
}

enum AccountType {
  ADMIN
  COMPANY
  MEMBER
}

enum TeamStatus {
  GENERAL
  STOPPED
  NOT_EXPOSED
  WAITING_ACTIVITY
  DELETED
}

enum AccountStatus {
  PENDING
  APPROVED
  SUSPENDED
  WITHDRAWN
}

enum AdminLevel {
  SUPERADMIN
  GENERAL
}

enum AuthenticationProviderType {
  KAKAO
  NAVER
  GOOGLE
  APPLE
  FACEBOOK
}

enum MemberLevel {
  PLATINUM
  GOLD
  SIVER
  TWO
  THREE
}



enum FileType {
  PDF
  ZIP
  RAR
  JPEG
  PNG
  CSV
  EXCEL
  WORD
}
